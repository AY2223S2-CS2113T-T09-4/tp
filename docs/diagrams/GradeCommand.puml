@startuml

participant ":Parser" as Parser
participant ":ModuleList" as ML
participant ":Module" as Mod
participant ":Print" as Print
[->Parser : CheckUserInput\n(userInput:String, moduleList:ModuleList)
activate Parser
Parser->ML : updateModuleGrade\n(moduleCode:String, String moduleGrade)
activate ML
loop module
    ML -> Mod : getModuleCode()
    activate Mod
    Mod --> ML : moduleCode:String
    deactivate Mod
    alt module.getModuleCode().equals(moduleCode)
        ML -> Mod : setGrade(moduleGrade:String)
        activate Mod
        Mod --> ML
        deactivate Mod
        ML -> Print : printUpdatedModuleGrade(module:Module)
        activate Print
        Print --> ML
        deactivate Print
        ML --> Parser
    else InvalidModule
        ML -> Print : printInvalidModule(moduleCode:String)
        activate Print
        Print --> ML
        deactivate Print
    end
end
ML --> Parser
deactivate ML
Parser-->[
deactivate Parser

@enduml